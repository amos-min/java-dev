spring:
  shardingsphere: 
    datasource: 
      ds0: 
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://127.0.0.1:5432/test1
        password: 123456
        type: com.alibaba.druid.pool.DruidDataSource
        username: postgres
      ds1: 
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://127.0.0.1:5432/test2
        password: 123456
        type: com.alibaba.druid.pool.DruidDataSource
        username: postgres
      names: ds0,ds1
    sharding:
      binding-tables: t_order,t_order_item
      broadcast-tables: t_config
      default-database-strategy:
        inline:
          algorithm-expression: ds$->{order_id % 2}
          sharding-column: order_id
      tables:
        t_order:
          actual-data-nodes: ds$->{0..1}.t_order$->{0..1}
          key-generator:
            column: order_id
            type: SNOWFLAKE
          table-strategy:
            inline:
              algorithm-expression: t_order$->{order_id % 2}
              sharding-column: order_id
        t_order_item:
          actual-data-nodes: ds$->{0..1}.t_order_item$->{0..1}
          key-generator:
            column: order_item_id
            type: SNOWFLAKE
          table-strategy:
            inline:
              algorithm-expression: t_order_item$->{order_id % 2}
              sharding-column: order_id
mybatis: 
  mapper-locations: classpath:mapper/*.xml
